%^^A* copyright
% \iffalse
%
%   This program is part of the Frankenstein bundle for LaTeX2e.
%
%   Copyright (C) 1995-1999 Matt Swift <swift@alum.mit.edu>
%
%   This file contains both the code and documentation for the
%   achicago LaTeX package.  It will work ONLY if it is placed in a
%   proper directory.  Files called README, INSTALL, achicago.tex
%   and achicago.ins should have also been distributed to you
%   with this file.  See them for more information on how to typeset
%   the documentation with LaTeX and how to generate a version of this
%   file that will work faster than this one.
%
%   This program is free software; you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation; either version 2 of the License, or
%   (at your option) any later version.
%
%   This program is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%   GNU General Public License for more details.
%
%   You should have received a copy of the GNU General Public License
%   along with this program (the file COPYING); if not, write to the
%   Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
%   USA.
%
%      NOTE:  I am willing to specially license this code.
%             Please simply contact me with your proposal.
%
% \fi  
%
%^^A* checks
%
%^^A NOTE:  The character table, with two %'s, will get written to all files.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%
% \CheckSum{392}
%
%^^A** abstract
% \newbook\manual{The Chicago Manual of Style}[The Chicago Manual]
% \begin{abstract}
%   A bibliography style based on \manual.  The style is mostly style A, but
%   borrows the author-date reference system from style B\@.  Section 16.25 of
%   the manual permits this combination.  Requires accompanying \BibTeX{}
%   bibliography style, \bst{achicago}.
% \end{abstract}
% \tableofcontents
%
% \part{Discussion}
% \AddToCheckSum{10}^^A FIX no idea why I have to do this.
%
% \section{General}
%
% \caveat{This documentation is spotty because I want to release this in time
% to get on \TeX Live 4.  Sorry!  Despite appearances in this file, this
% package really does work.  My testbed has been a long document with about 350
% citations and a 12-page bibliography.}
%
% \caveat{Annotation was working once, but I haven't toyed with it in a long time.}
%
% This package is designed for use with the \bst{achicago} \BibTeX{}
% bibliography style.  For the moment, you pretty much have to commit to using
% this bibstyle-package combination when you write your sources.  This needn't
% be true, and one day I am going to create a series of mappings from other
% common bibstyles that are conceptually similar, such as the
% \bst{harvard} styles.  The user commands are slightly different, but it
% should be the case that either set of user commands can be the front end for
% either bibstyle.
%
% Here in this documentation you will read about the commands you will use in
% your \LaTeX{} source file to make citations, and what the citations look
% like.  Documentation of the \bst{achicago} bibstyle itself is in the file
% \file{achicago-bst.dvi}.  There you can read about what the References
% section, the actual book list, looks like.  There are also some new fields
% recognized and other information you might want to know that relates to your
% \BibTeX{} bibliography database file (\ext{bib} file).  You may also wish to
% look at the \package{titles} package (also in the \Frankenstein bundle),
% which can be very helpful in typesetting various styles of titles properly,
% even when nested.  The \package{achicago} package already requires the
% \package{titles} package, so those commands are always there if you want to
% use them.
%
% \section{Notes on the future of this package and bibstyle}
%
% In the future I hope to document more closely the Manual's principles wrt
% each entry type, the many choices given by \manual.
% 
% Untested and indeed hardly testable nature of the subject, with all its many
% permutations and difficult special bibliographic cases.  Feedback is very
% welcome, especially with citations from the Manual.
%
% FUTURE One thing I realize now is that I've kept the same user interface I
% inherited, which I don't think corresponds with any other popular style.
% Besides refinement, this is the next major step in the future of this
% bibstyle-package.
%
% \section{Usage}
%
%  Some of this dox is spotty, some redundant.  Here are the basic inline citations that
%  you can conjure with this package:
%
% \begin{verbatim}
%   Citation format: 
%             (author-last-name year)
%             (author-last-name and author-last-name year)
%             (author-last-name et al. year)
%             (author-last-name)
%             author-last-name
%             author-last-name (year)
%             (author-last-name and author-last-name)
%             (author-last-name et al.)
%             (year) or (year, year)
%             year or year, year
% \end{verbatim}
%
% Here are the various citing commands, and what they look like.  Presently the
% variable which controls the number of names before switching to ``et al.''\
% in the abbreviated author list is~2, but this can be made 3 or more easily
% with a simple change to a constant in `format.short.label.names'. This
% unfortunately cannot be controlled by \TeX.  I don't think spacing after the
% period in ``et~al.'' is handled correctly: FIX.  Also, what about the
% situation when you end a sentence with something ending with ``et~al.''---in
% this case you don't want to reproduce the period. 
% \begin{tabular}{*{3}{p{.33\textwidth}}}
%  |\cite{key}| &
%    full author list and year &
%    (Brown 1978; Jarke, Turner, and Stohl 1985) \\
%  |\citeNP{key}| &
%    full author list and year, no parentheses &
%    Brown 1978; Jarke, Turner, and Stohl 1985 \\
%  |\citeA{key}| &
%    full author list &
%    (Brown; Jarke, Turner, and Stohl) \\
%  |\citeANP{key}| &
%    full author list, without
%    parentheses & Brown; Jarke, Turner, and Stohl \\
%  |\citeN{key}|\footnotemark &
%    full author list and year with only the year in parentheses, i.e., in the
%    form of a noun &
%    Brown (1978) states that\lips\relax \\
%  |\shortcite{key}| &
%    abbreviated author list and year & (Brown 1978; Jarke et~al. 1985) \\
%  |\shortciteNP{key}| &
%    abbreviated author list and year, no parentheses & 
%                     Brown 1978; Jarke et~al. 1985 \\
%  |\shortciteA{key}| & 
%     abbreviated author list & (Brown; Jarke et~al.) \\
%  |\shortciteANP{key}| & 
%    abbreviated author list, no parentheses & Brown; Jarke et.~al  \\
%  |\shortciteN{key}|\addtocounter{footnote}{-1}\footnotemark &
%    abbreviated author list and year, in form of a noun &
%    Jarke et~al. (1985) state that\lips\relax \\
%  |\citeyear{key}| &
%     year in parentheses & (1978, 1985) \\
%  |\citeyearNP{key}| &
%    year no parentheses & 1978, 1985 
% \end{tabular}
% \footnotetext{This command should only be used for one key.}
% \todo{Should I use a warning in case more than one key is given to a command
% that shouldn't have them?}
%
% \section{Some technical notes}
%
% \todo{See \S 16.14 for issues to do with multiple citations.}
%
% This \BibTeX{} style has support for abbreviated author lists and for
% year-only citations.  This is done by having the citations actually look
% like:
% \begin{codeexample}
%    \citeauthoryear{full-author-info}{abbrev-author-info}{year}
% \end{codeexample}
%
% \section{Credits}
% 
% I wrote this package incorporating \file{chicago\{,a\}.bst} and
% file{chicago.sty} (v4, 92/8).  By now I've almost totally rewritten it.  It
% was a great mess because it had been based on \file{newapa.bst} which had
% been based on several other bibstyles, and each author had really just hacked
% up what was there in the previous bibstyle apparently without fully
% understanding it.  Now, of course, it is a shining example of clarity and
% efficiency.
%
% \StopEventually{}
%
% \part{Implementation}
%
% \section{Version control}
%
%  \begin{macro}{\fileinfo}
%  \begin{macro}{\DoXUsepackagE}
%  \begin{macro}{\HaveECitationS}
%  \begin{macro}{\fileversion}
%  \begin{macro}{\filedate}
%  \begin{macro}{\docdate}
%  \begin{macro}{\PPOptArg}
% These definitions must be the first ones in the file.
%    \begin{macrocode}
\def\fileinfo{Chicago Manual A-style (but author-date) citations}
\def\DoXPackageS {achicago}
\def\initelyHavECitationS {}
\def\fileversion{v1}
\def\filedate{1995/11/27}
\def\docdate{1999/03/01}
\edef\PPOptArg {%
  \filedate\space \fileversion\space \fileinfo
}
%    \end{macrocode}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%
% If we're loading this file from a \cs\ProcessDTXFile command (see the
% \package{compsci} package), then \cs\JusTLoaDInformatioN will be defined;
% othewise we assume it is not (that's why the FunkY NamE).
% 
% If we're loading from \cs\ProcessDTXFile, we want to load the packages listed
% in \cs\DoXPackageS (needed to typeset the documentation for this file) and
% then bail out.  Otherwise, we're using this file in a normal way as a
% package, so do nothing.  \cs\DoXPackageS, if there are any, are declared in
% the \ext{dtx} file, and, if you're reading the typeset documentation of this
% package, would appear just above.  (It's OK to call \cs\usepackage with an
% empty argument or \cs\relax, by the way.)
%    \begin{macrocode}
\makeatletter% A special comment to help create bst files.  Don't change!
\@ifundefined{JusTLoaDInformatioN} {%
  }{% ELSE (we know the compsci package is already loaded, too)
  \UndefineCS\JusTLoaDInformatioN
  \SaveDoXVarS
  \eExpand\csname DoXPackageS\endcsname\In {%use \csname in case it's undefined
    \usepackage{#1}%
  }%
  \RestoreDoXVarS
  \makeatother
  \endinput
}% A special comment to help create bst files.  Don't change!
%    \end{macrocode}
%
% Now we check for \LaTeX2e and declare the LaTeX package.
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{achicago}[\PPOptArg]
%    \end{macrocode}^^A special comment to help create bst files.  Don't change!
%
% ^^A NOTE: We have to compensate for the above backslashes, which are not
% ^^A       actually in the .dtx file the author works on, by adding to the
% ^^A       CheckSum.
%%
% \AddToCheckSum{17}^^A `dtx-update-checksum' automatically handles this.
% \AddToCheckSum{7}^^A The half a macrocode env. at the top is missed, however...
% \AddToCheckSum{10}^^A ... and so are the 5 \defs from the .dtx file 
%                   ^^A     that precede it.
% \IfCitations {%
%   \AddToCheckSum{2}^^A When \initelyHavECitationS is defined in
% }                  ^^A the .dtx file, we need 2 more in the CheckSum.
%
%
%    \begin{macrocode}
\RequirePackage{moredefs,titles,blkcntrl}
%    \end{macrocode}
%
%    \begin{macrocode}
\newboolean{Annotate}
\newcommand\annotate {%
  \Annotatetrue
}
\newcommand\noannotate {%
  \Annotatefalse
}
%    \end{macrocode}
%
% \cs\citework is supposed to be a general command for citing things declared
% with \cs\newwork in the \package{abbrevs} package.  It has one optional and
% one required argument so that it is parallel with the other citing commands,
% but I cannot see any use for it without the optional argument.  Environments
% can exert complete control over how this macro looks by resetting the three
% parameters.  The default will look good outside all environments, in running
% text.
%
% The second argument is expected to be something defined with \cs\newwork.  
% 
% Needs modification to handle the empty optional arg.  Watch interfering with
% things surrounding macros might have set. \cs\relax's are intentionally left
% out to let constructions like \cs\csname\lips\cs\endcsname [eh? FIX] work on
% the arguments.
%
% \begin{macro}{\PreCiteWork}
% \begin{macro}{\PostCiteWork}
%   \begin{macrocode}
\providesavebox\sc@box@a
\newcommand\PreCiteWork {%
  (\csname%
}
\newcommand\PostCiteWork {%
  \end{lrbox}\usebox{\sc@box@a})%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% We don't want to be unbreakable here, but we want a high penalty.  We
% absolutely do not want to break the number range, so we put it in an lrbox.
%
% I think comma is better, even though it might seem fussy, because it is
% better parallel with the way \cs\cite works with an optional page argument:  the
% convention is that page numbers come after commas.
%
%    \begin{macrocode}
\newcommand\MidCiteWork {%
  \endcsname,\penalty9000\ \begin{lrbox}{\sc@box@a}%
}
\newcommand\citework [2] {%
  \PreCiteWork #2\MidCiteWork #1\PostCiteWork
}
%    \end{macrocode}
%
% \begin{verbatim}
% The {} fools abbrevs.dtx into not adding an extra space
% \newcommand\MidCiteWork {%
%   \endcsname{}\penalty9000\ \begin{lrbox}{\sc@box@a}%
% }
% \end{verbatim}
%
% \todo{Make citework* with no parentheses, or other alternative.}
%
% FIX:  When the ? is placed there, there are two left parens, one right.
%
% We want the remaining macros in this section to be available in their own
% piece. 
%
% \todo{is \cs\PreChunk the only dependence on blkcntrl?  Should make this not
% necessary if so.}
%
%    \begin{macrocode}
\newcommand\PreAnnotation {%
  \PreChunk
}
%    \end{macrocode}
%
% This will make the definition of the \env{thebibliography} environment in
% \file{classes.dtx} do the right thing.  FIX: not defined in letter class?
%    \begin{macrocode}
\defcommand\@openbib@code {%
  \advance\leftmargin\bibindent
  \itemindent -\bibindent
  \listparindent \itemindent
  \parsep \z@
}
\let\newblock\relax
%    \end{macrocode}
% This doesn't work at the beginning, for some reason.   The auxfiles are not
% set up right?
%    \begin{macrocode}
\AtEndDocument {%
  \bibliographystyle{achicago}%
}  
%    \end{macrocode}
%
% The \bst{achicago} bibliography style will insert some macros that are not
% defined by \LaTeX, and some that must have new meanings.  They are:
% \cs\citeN, \cs\SCcite, \cs\SCduplicate, \code{\begin{SCannotation}},
% \code{\end{SCannotation}}.
%
% Some of these commands should properly have |@| in their names, but
% |@|-commands cannot appear in the \ext{bbl} file.  As a compromise, the names
% have the prefix |SC|.
%
%  \begin{macro}{\SCduplicate}
% The argument will contain the actual `long.label' that is a duplicate, in
% case it might ever be of use.  But for now, we just want to replace
% duplicates with 3-em dashes.
%
% FIX: OK, we're trying to do it so that we print the argument if it's the
% first \cs\SCduplicate on the page, using the \package{afterpage} package.
% Problem is, we process sometimes one or two more \cs\bibitem's than make it
% onto the page.  This is going to be next to impossible, even if you change
% the \cs\output routine.  So comment it out, including requiring
% \package{afterpage}.
%
% Instead, we define \cs\topitem, which can be inserted manually into the
% \ext{bbl} file right before the \cs\bibitem that occurs with an
% \cs\SCduplicate at the top of a final page.  The \cs\topitem command causes
% the immediately following (and only that one) \cs\SCduplicate to print its
% argument.
%    \begin{macrocode}
%\RequirePackage{afterpage}
%\newboolean{@sc@duplicatedash@}
%\@sc@duplicatedash@true
%\SaveCS\bibitem
%\newcommand\sc@bibitemfirst {%
%  \typeout{in bibitemfirst  [\the\foo]}%
%  \afterpage {%
%    \typeout{in afterpage [\the\foo]}%
%    \global\@sc@duplicatedash@false
%    \global\let\bibitem\sc@bibitemfirst
%  }%
%  \let\bibitem\MDSavedbibitem
%  \bibitem
%}
%\let\bibitem\sc@bibitemfirst

\newcommand*\sc@duplicate@dash [1] {%
%  \if@sc@duplicatedash@
    \sc@mmmdash
%  \else
%    #1%
%  \fi
%  \@sc@duplicatedash@true
}

\newcommand\sc@duplicate@arg [1] {%
  #1%
  \let\SCduplicate\sc@duplicate@dash
}
\newlet\SCduplicate\sc@duplicate@dash
\newcommand\topitem {%
  \let\SCduplicate\sc@duplicate@arg  
}
%    \end{macrocode}
%  \end{macro}
%
%  \begin{macro}{\sc@mmmdash}
% A 3em-dash.
%    \begin{macrocode}
\newcommand\sc@mmmdash {%
  \rule[.6ex]{3em}{.03ex}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\PreAnnotation}
% \begin{macro}{\sc@begingobble}
% \begin{macro}{\sc@endgobble}
% \begin{environment}{SCannotation}
% This sets up the \env{SCannotation} environment.  When the boolean
% \cs\IfAnnotate is false, we gobble everything between \code{\begin{SCannotation}}
% and \code{\end{SCannotation}}.
%
% \todo{These should be \cmd{comment} and \cmd{endcomment}, but we have to be
% careful how we define them.  An lrbox required balanced text inside.}
%    \begin{macrocode}
\newcommand\sc@begingobble {%
  \relax\begin{lrbox}{\sc@box@a}%
}
\newcommand\sc@endgobble {%
  \relax\end{lrbox}\sbox\sc@box@a{}%
}
%    \end{macrocode}
% \todo{I shouldn't define annote in terms of quotation, we should copy a
% standard one here.}
%    \begin{macrocode}
\newenvironment{SCannotation} {%
    \ifAnnotate
      \let\PreQuotation\PreAnnotation
      \relax\begin{quotation}%
    \else
      \sc@begingobble
    \fi
  }{%
  \ifAnnotate
    \relax\end{quotation}%
  \else
    \sc@endgobble
  \fi
}
%    \end{macrocode}
%  \end{environment}
% \end{macro}
% \end{macro}
% \end{macro}
%
%  \begin{macro}{\SCcite}
%  \begin{macro}{\sc@one@three}
%  \begin{macro}{\sc@two@three}
% \cs\SCcite is what \bst{achicago} produces.  Its args are `long.label',
% `short.label', and `year.label'.
%    \begin{macrocode}
\ReserveCS\SCcite

\newcommand\sc@one@three [3] {#1}
\newcommand\sc@two@three [3] {#2}
%    \end{macrocode}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%
% This spits out arguments |#1| and |#3| with |#2| intervening iff
% \cname{@tempswatrue}.
%\begin{verbatim}  FIX -- what's going on
% \newcommand\sc@citeformat [3]
%  {\def\@cite#1#2{%
%    #1\if@tempswa#2\fi#3}
%\end{verbatim}
%
%  \begin{macro}{\PreCite}
%  \begin{macro}{\PostCite}
% Should have one single command be what each of the following executes.  Its
% arguments determine what all the other stupid things do.  hunh?  FIX
%    \begin{macrocode}
\newcommand\PreCite {%
  (%
}
\newcommand\PostCite {%
  )%
}
%    \end{macrocode}
%  \end{macro}
%  \end{macro}
%
% \begin{macro}{\cite}
% \begin{macro}{\citeNP}
% \begin{macro}{\citeA}
% \begin{macro}{\citeN}
% \begin{macro}{\citeANP}
% The way this works is: \cname{\@cite} is called once for each citing command,
% and \cs\SCcite is called once for each key.  The results are spaced by either
% semicolons (\cname{\sc@cite@sc}) or commas (\cname{\sc@cite@comma}), and
% these become argument |#1| for \cname{\@cite}.
%
% |\PreCite1[, 2]\PostCite  \sc@citeformat{\PreCite##1}{, ##2}{\PostCite}|
%    \begin{macrocode}
\def\cite {%
  \defcommand*\@cite [2] {%
    \PreCite ##1\if@tempswa , ##2\fi\PostCite
  }%
  \defcommand*\SCcite [3] {%
    ##1\ ##3%
  }%
  \sc@cite@sc
}
% 1[, 2]    \sc@citeformat{##1}{, ##2}{}
\newcommand*\citeNP {%
  \defcommand*\@cite [2] {%
    ##1\if@tempswa , ##2\fi
  }%
  \defcommand*\SCcite [3] {%
    ##1\ ##3%
  }%
  \sc@cite@sc
}
% 1[, 2])  \sc@citeformat{##1}{, ##2}{)}
% \newcommand*\citeN {%
%   \defcommand*\@cite [2] {%
%     ##1\if@tempswa , ##2\fi
%   }%
%   \defcommand*\SCcite [3] {%
%     ##1\ \PreCite##3\PostCite
%   }%
%   \sc@cite@comma
% }
%    \end{macrocode}
% `long.label' (`year', optarg)
%    \begin{macrocode}
\newcommand*\citeN {%
  \defcommand*\@cite [2] {%
    ##1\if@tempswa , ##2\fi\PostCite
  }%
  \defcommand*\SCcite [3] {%
    ##1\ \PreCite ##3%
  }%
  \sc@cite@comma
}
\newlet\UnexpandableProtect\@unexpandable@protect
% \PreCite1[, 2]\PostCite  \sc@citeformat{\PreCite ##1}{, ##2}{\PostCite}
\newcommand*\citeA {%
  \defcommand*\@cite [2] {%
    \PreCite ##1\if@tempswa , ##2\fi\PostCite
  }%
  \let\SCcite\sc@one@three
  \sc@cite@sc
}
% 1[, 2]    \sc@citeformat{##1}{, ##2}{}
\newcommand*\citeANP {%
  \defcommand*\@cite [2] {%
    ##1\if@tempswa , ##2\fi
  }%
  \let\SCcite\sc@one@three\sc@cite@sc
}
%    \end{macrocode}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%    
%  \begin{macro}{\shortcite}
%  \begin{macro}{\shortciteNP}
%  \begin{macro}{\shortciteN}
%  \begin{macro}{\shortciteA}
%  \begin{macro}{\shortciteANP}
%    \begin{macrocode}
\newcommand*\shortcite {%
  \defcommand*\@cite [2] {%
    \PreCite ##1\if@tempswa , ##2\fi\PostCite}%
  \defcommand*\SCcite [3] {%
    ##2\ ##3%
  }%
  \sc@cite@sc
}
\newcommand*\shortciteNP {%
  \defcommand*\@cite [2] {%
    ##1\if@tempswa , ##2\fi
  }%
  \defcommand*\SCcite [3] {%
    ##2\ ##3%
  }%
  \sc@cite@sc
}
\newcommand*\shortciteN {%
  \defcommand*\@cite [2] {%
    ##1\if@tempswa , ##2\PostCite\else\PostCite\fi}%
  \defcommand*\SCcite [3] {%
    ##2\ \PreCite ##3%
  }%
  \sc@cite@comma
}
\newcommand*\shortciteA {%
  \defcommand*\@cite [2] {%
    \PreCite ##1\if@tempswa , ##2\fi\PostCite
  }%
  \let\SCcite\sc@two@three
  \sc@cite@sc
}
\newcommand*\shortciteANP {%
  \defcommand*\@cite [2] {%
    ##1\if@tempswa , ##2\fi
  }%
  \let\SCcite\sc@two@three\sc@cite@sc
}
%    \end{macrocode}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%
%  \begin{macro}{\citeyear}
%  \begin{macro}{\citeyearNP}
% \mbox{}
%    \begin{macrocode}
% \PreCite1[, 2]\PostCite  \sc@citeformat{\PreCite ##1}{, ##2}{\PostCite}
\newcommand*\citeyear {%
  \defcommand*\@cite [2] {%
    \PreCite ##1\if@tempswa , ##2\fi\PostCite
  }%
  \defcommand*\SCcite [3] {%
    ##3%
  }%
  \sc@cite@comma
}
% 1[, 2]    \sc@citeformat{##1}{, ##2}{}
\newcommand*\citeyearNP {%
  \defcommand*\@cite [2] {%
    ##1\if@tempswa , ##2\fi
  }%
  \defcommand*\SCcite [3] {%
    ##3%
  }%
  \sc@cite@comma
}
%    \end{macrocode}
%  \end{macro}
%  \end{macro}
%
%  \begin{macro}{\sc@citesep}
%  \begin{macro}{\sc@cite@sc}
%  \begin{macro}{\sc@cite@comma}
% \mbox{}
%    \begin{macrocode}
\ReserveCS\sc@citesep
\newcommand\sc@cite@sc {%
  \let\sc@citesep ;%
  \sc@cite
}
\newcommand*\sc@cite@comma {%
  \let\sc@citesep ,%
  \sc@cite
}
%    \end{macrocode}
%  \end{macro}
%  \end{macro}
%  \end{macro}
%
%  \begin{macro}{\sc@cite}
% This command executes \cname{\b@foo} for every \cs\foo in the list of cited
% labels, and separates them by arg |#1|.
%
% There has got to be a more elegant solution to this whole thing. FIX
%    \begin{macrocode}
\newcommand*\sc@cite {%
  \@ifnextchar [ {%
      \@tempswatrue
      \sc@@cite
    }{% ELSE
    \@tempswafalse
    \sc@@cite[]%
  }%
}
%    \end{macrocode}
%  \todo{handle reserving names}
%    \begin{macrocode}
\providecommand\@writeaux {%
  \immediate\write\@auxout
}
\NewName*{sc@@cite} {[#1]#2} {% args: [optarg] label % optarg MANDATORY
  \if@filesw
    \@writeaux{\string\citation{#2}}%
  \fi
  \@cite{%
    \InitCS\sc@t@a
    \@for\sc@label:=#2\do {%
      \sc@t@a
%      \let\sc@t@a\sc@citesep
      \def\sc@t@a {\sc@citesep\ }% add space
      \@ifundefined{b@\sc@label} {%
          {\bfseries ?}%
          \@warning{Citation `\sc@label' on page \thepage\space undefined}%
        }{% ELSE
        \@nameuse{b@\sc@label}%
      }%
    }%
  }{#1}%
}
%    \end{macrocode}
%  \end{macro}
%
%  \begin{macro}{\bibindent}
% Indent second and subsequent lines of bibliographic entries.
%    \begin{macrocode}
\setlength\bibindent{1.5em}
%    \end{macrocode}
%  \end{macro}
%
%  \begin{environment}{thebibliography}
% There is no \option{openbib} option.  The definitions of \cs\newblock and
% \cs\@biblabel are kept local in case something else weird is going on.
%    \begin{macrocode}
\newcommand\sc@defbib [2] {%
  \renewenvironment*{thebibliography} [1] {%
      #1*{#2\@mkboth{#2}{#2}}% FIX didn't have this comment char here, OK?
      \relax\begin{list}{}{%
                          \leftmargin\z@
                          \advance\leftmargin\labelsep
                          \advance\leftmargin\bibindent
                          \itemindent -\bibindent
                          \listparindent \itemindent
                          \parsep \z@}%
%    \end{macrocode}
% \booktitle{The Chicago Manual} \cite{chicago:14} does not acknowledge
% different spacings after different marks of punctuation, distinguish
% interword from intersentence space, or give rules about where to break a line
% near an ellipsis.  So we are on our own in the bibliography.  I have chosen
% to leave things as they are done in the standard bibliography styles, because
% I haven't yet given it my close consideration.  That is, we leave all the
% punctuation the same except for the period, which we set to 1000, I forget
% now whether that's a lower or upper case letter.  Extending the space after a
% period when appropriate seems to be the purpose of using \cs\newblock, in
% this bibstyle.
%    \begin{macrocode}
      \sfcode`\.=\@m
      \def\newblock {%
        \hskip .11em \@plus.33em \@minus.07em%
      }%
      \let\@biblabel\Gobble
      \sloppy
      \clubpenalty4000\widowpenalty4000%
    }{%
    \def\@noitemerr {%
      \@latex@warning{Empty `thebibliography' environment}%
    }%
    \relax\end{list}%
  }%
}
\@ifclassloaded{article} {%
    \sc@defbib{\section}{\refname}%
  }{% ELSE
  \sc@defbib{\chapter}{\bibname}%
}
\InitCS\sc@defbib  % FIX -- where else can I do this?
%    \end{macrocode}
%  \end{environment}
%
% \Finale
